# JavaScript 기본 history

- 1995년 탄생
- 1997년 ECMA : 표준을 정하는 기관, 자바스크립트 표준화 작업 진행
- ECMAScript 초안 (현재 : ECMA2017)
- 잘 사용 X -> 바이러스급 인식 문제가 많다

- 2005년 구글지도 등장 -> Ajax 등장 -> 사용량 급등
- 2008년 Chrome 공개, 소스 공개 -> V8 엔진 -> JIT컴파일러 변화해서 처리
- 2009년 V8 엔진 기반으로 node.js 탄생
-> 자바스크립트로 서버사이드 개발 가능

- 2010년도 피쳐폰에서 스마트폰으로 패러다임 변경
-> 앱 개발 시장이 열렸고, 하이브리드 개발 시장 형성 (하이브리드 : 네이티브 말고 웹 기반으로 앱을 개발하는 기술)
-> HTML, CSS, JS 요소가 성장
-> HTML5 등장, 폭발적 성장

- HTML5, CSS3, JavaScript 시장 open
-> AngularJS - ReactJS - Vue 플랫폼 등장
-> 이 3개 플랫폼 서버와 통신하면서(Ajax)
    클라이언트는 서버프로그램 없이 직접 클라이언트 사이드에서 구성하는 웹 어플리케이션 개발 형태로 진화
-> HTML5 등장으로 액티브엑스 제거, 플래시 제거를 활성화

- 2010년도에 JS가 문법적으로 약한 부분이 존재
-> AltJS가 등장 (커피스크립트, 타입스크립트)
-> 문법을 강화하여 엄격히 작성 - transcomplile을 통해서 JS로 나오는 구조
ex) typeScript 개발 -> transcompile -> (순수한) js : AngularJS

- 2015년 모던 스크립트 등장 (표준이 강화, ECMA2015, ES6)
-> 언어적 정립 시작 -> (그러나) 브라우저가 미반영
-> 표준코드를 호환코드로 변경해주는 기술이 필요 : Babel(바벨)
-> 바벨의 반대 -> StandardJS(비표준->표준)
-> 코드가 다 노출된다 -> 가독성을 떨어트리고, 크기도 줄이고 -> 웹팩(WebPack) : 코드가 한 줄

