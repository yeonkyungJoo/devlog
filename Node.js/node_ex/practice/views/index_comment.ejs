<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no">
    <!-- <%= 변수 %> : 변수값을 출력 표현 -->
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  </head>
  <body>
    <div>
      <h1>주식 검색(Ajax, json, jQuery 사용)</h1>
      <fieldset>
        <form>
          <input type = "text" name = "keyword" placeholder="주식명" />
          <input type = "submit" value = "검색" />
        </form>
        <div id = "results" style = "margin-top : 1em;"></div>
      </fieldset>
      <script>
        // 여기에 script가 존재하는 이유는
        // 바로 위에 있는 html 요소를 엑세스하겠다는 의미
        
        // 1. form 특정해서, 전송 이벤트를 인터셉트 해야한다(event : submit)
        $('form').on('submit', (evt)=>{
          // 2. 이벤트 무효화
          evt.preventDefault()
          // 3. Ajax 통신
          // https://api.jquery.com/jQuery.ajax/
          $.ajax({
            url : '/search',                // 통신할 주소(동일 도메인)
            data : $('form').serialize(),   // 전송할 데이터, 자동 구성
            type : 'get',                   // 전송 방식 : 메소드
            dataType : 'json',              // 응답 데이터 포맷
            success : (data)=>{             // 성공 시
              console.log('성공', typeof data)

              // 화면 처리 -> DOM 조작
              // 결과창을 특정해서, 응답 데이터 중 name컬럼을 뽑아서
              // <div>이름</div>를 생성하여 자식으로 추가한다
              // 지정된 횟수를 반복하기 위해 배열, for문 사용
              
              $('#results').empty()   // 기존 결과 삭제 -> 비운다
              $.each( data, (index, item)=>{
                // ex) '삼성' 입력
                let html = item.name
                // 검색어를 진하게 <b> 처리
                let word = $('[name = keyword]').val()
                // 삼성전자 -> <b>삼성</b>전자
                html = html.replace(word, `<b>${word}</b>`)
                // $('results').append(`<div>${html}</div>`)
                $('#results').append(`<div id="stock${index}">${html}</div>`)

                // 해당 주식 이름을 클릭하면 
                $('#stock${index}').on('click', ()=>{
                  // alert('주식명')가 호출되도록 구현
                  // alert(item.name)
                  // 상세 보기
                  location.href = `/info/${item.code}?update=0`
                })
              })
            },
            error : (err)=>{                // 실패 시
              console.log('실패', err)
            }      
          })
          return false
        })
      </script>
    </div>
    <div>
      <h1>주식 리스트</h1>
      <!-- 데이터를 리스트로 표현할 때 주로 사용 -->
      <table border = '1' cellspacing = '0' width = '100%'>
        <thead>
          <tr>
            <th>code</th>
            <th>name</th>
            <th>cur</th>
            <th>rate</th>
          </tr>
        </thead>
        <tbody>
          <% for (row of rows) { %>
            <tr>
              <td><%= row.code %></td>
              <td><%= row.name %></td>
              <td><%= row.cur %></td>
              <td><%= row.rate %></td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
    <script>
      // HTML을 인터프리터(렌더링)하면 브라우저가 한줄한줄 읽어서 해석
      // -> 화면 처리 : 메모리에 html 문서 적재 -> DOM 구성
      // BODY 태그를 다는 지점 직전에 스크립트를 열면 
      // 이미 메모리에 다 로드되어 있으므로 HTML 조작이 가능
      $('tbody>tr:even').css('background', 'lightgreen')
    </script>
  </body>
</html>
